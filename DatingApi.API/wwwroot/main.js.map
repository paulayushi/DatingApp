{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/errorhandling/error.interceptor.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/guard/prevent-unsaved-changes.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/member-card/member-card.component.css","webpack:///./src/app/member-card/member-card.component.html","webpack:///./src/app/member-card/member-card.component.ts","webpack:///./src/app/member-detail/member-detail.component.css","webpack:///./src/app/member-detail/member-detail.component.html","webpack:///./src/app/member-detail/member-detail.component.ts","webpack:///./src/app/member-edit/member-edit.component.css","webpack:///./src/app/member-edit/member-edit.component.html","webpack:///./src/app/member-edit/member-edit.component.ts","webpack:///./src/app/member-list/member-list.component.css","webpack:///./src/app/member-list/member-list.component.html","webpack:///./src/app/member-list/member-list.component.ts","webpack:///./src/app/member-messages/member-messages.component.css","webpack:///./src/app/member-messages/member-messages.component.html","webpack:///./src/app/member-messages/member-messages.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/model/pagination.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/photo-editor/photo-editor.component.css","webpack:///./src/app/photo-editor/photo-editor.component.html","webpack:///./src/app/photo-editor/photo-editor.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/resolver/lists.resolver.ts","webpack:///./src/app/resolver/member-detail.resolver.ts","webpack:///./src/app/resolver/member-edit.resolver.ts","webpack:///./src/app/resolver/member-list.resolver.ts","webpack:///./src/app/resolver/messages.resolver.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/services/alertifyservice/alerify.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/userservice/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthService } from './services/auth.service';\nimport { User } from './model/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n  constructor(private authService: AuthService) {}\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user : User = JSON.parse(localStorage.getItem('user'));\n    if(token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n\n    if(user) {\n      this.authService.currentUser = user;\n      this.authService.updateCurrentPhotoUrl(this.authService.currentUser.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport {TimeAgoPipe} from 'time-ago-pipe';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AuthService } from './services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './errorhandling/error.interceptor';\nimport { AlerifyService } from './services/alertifyservice/alerify.service';\nimport { MemberListComponent } from './member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { UserService } from './services/userservice/user.service';\nimport { MemberCardComponent } from './member-card/member-card.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { MemberDetailComponent } from './member-detail/member-detail.component';\nimport { MemberDetailResolver } from './resolver/member-detail.resolver';\nimport { MemberListResolver } from './resolver/member-list.resolver';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\nimport { MemberEditResolver } from './resolver/member-edit.resolver';\nimport { AuthGuard } from './guard/auth.guard';\nimport { PreventUnsavedChanges } from './guard/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './photo-editor/photo-editor.component';\nimport { ListsResolver } from './resolver/lists.resolver';\nimport { MessagesResolver } from './resolver/messages.resolver';\nimport { MemberMessagesComponent } from './member-messages/member-messages.component';\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavbarComponent,\n      HomeComponent,\n      RegisterComponent,\n      MemberListComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      TimeAgoPipe,\n      MemberMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      NgxGalleryModule,\n      FileUploadModule,\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      ButtonsModule.forRoot(),\n      PaginationModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      TabsModule.forRoot(),\n      JwtModule.forRoot({\n         config: {\n           tokenGetter: tokenGetter,\n           whitelistedDomains: ['localhost:5000'],\n           blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n       })\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlerifyService,\n      UserService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      ListsResolver,\n      MessagesResolver,\n      AuthGuard,\n      PreventUnsavedChanges\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS, HttpRequest } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError( error => {\r\n                if( error instanceof HttpErrorResponse) {\r\n                    if(error.status === 401){\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if(applicationError){\r\n                        console.log(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modalStateError = '';\r\n                    if (serverError && typeof serverError === 'object') {\r\n                        let errors = serverError['errors'];\r\n                        if ( errors ) {\r\n                            for ( const key in errors ) {\r\n                                modalStateError += errors[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateError || serverError || 'Server Error!');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authSvc: AuthService, private route: Router,\n    private alerifySvc: AlerifyService){}\n  canActivate(): boolean {\n    if(this.authSvc.loggedIn()){\n      return true;\n    }\n    this.alerifySvc.error('You are not logged in. Action is not allowed!!');\n    this.route.navigate(['\\home']);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { CanDeactivate } from \"@angular/router\";\r\nimport { MemberEditComponent } from \"../member-edit/member-edit.component\";\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm('Do you want to continue? Any unsaved changes will be lost!');\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matching. All you need to do is sign-up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)='registerToggle()'>Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegisterMode)='cancelRegisterMode()'></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  constructor( private _http: HttpClient) { }\n\n  ngOnInit() {\n  }\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n  </div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n    </div>\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"\\n    >\\n\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../model/user';\nimport { Pagination, PaginationResult } from '../model/pagination';\nimport { UserService } from '../services/userservice/user.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  likesParam: string;\n  pagination: Pagination;\n\n  constructor(private userSvc: UserService, private alertifySvc: AlerifyService,\n      private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe( data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers(){\n    this.userSvc.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe( (response: PaginationResult<User[]>) => {\n        this.users = response.result;\n        this.pagination = response.pagination;\n      }, error => {\n        this.alertifySvc.error(error);\n      });\n  }\n}\n","module.exports = \".card:hover img {\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper{\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons{\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons{\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate{\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img src=\\\"{{user.photoUrl || '../../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" \\n        [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"likeUser(user.id)\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"\\n        [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]='{tab: 3}' routerLinkActive=\\\"router-link-active\\\"  ><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\">\\n      {{user.knownAs}}, {{user.age}}</i>\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../model/user';\nimport { UserService } from '../services/userservice/user.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n  constructor(private userService: UserService, \n    private authSvc: AuthService, private alertifySvc: AlerifyService) { }\n\n  ngOnInit() {\n  }\n\n  likeUser(recipientId: number){\n    this.userService.likeUser(this.authSvc.decodedToken.nameid, this.user.id).subscribe( () => {\n      this.alertifySvc.success('You have liked: ' + this.user.knownAs);\n    }, error => {\n      this.alertifySvc.error(error);\n    });\n  }\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85% !important;\\r\\n    /* height: 85% !important; */\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img src=\\\"{{user.photoUrl || '../../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top img-thumbnail\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since:</strong>\\n            <p>{{user.created | date: \\\"mediumDate\\\"}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTab>\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user.introduction || 'Please enter your description.'}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user.lookingFor || 'Please enter what you are looking for.'}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user.interests || 'Please enter your interests.'}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]='user.id'></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../model/user';\nimport { UserService } from '../services/userservice/user.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTab') memberTab: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  constructor(private userSvc: UserService, private alertfySvc: AlerifyService, private router: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.data.subscribe( data => {\n      this.user = data['user'];\n    });\n    this.router.queryParams.subscribe( params => {\n      const selectedTab = params['tab'];\n      this.memberTab.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n  \n  getImages() {\n    const imageUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number){\n    this.memberTab.tabs[tabId].active = true;\n  }\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <h1>Your Profile</h1>\\n      </div>\\n      <div class=\\\"col-sm-8\\\">\\n        <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n          <strong>Information: </strong>You have made changes to your profile. Any unsaved changes will be lost!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"card\\\">\\n          <img src=\\\"{{photoUrl || '../../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top img-thumbnail\\\">\\n          <div class=\\\"card-body\\\">\\n            <div>\\n              <strong>Location:</strong>\\n              <p>{{user.city}}, {{user.country}}</p>\\n            </div>\\n            <div>\\n              <strong>Age:</strong>\\n              <p>{{user.age}}</p>\\n            </div>\\n            <div>\\n              <strong>Last Active:</strong>\\n              <p>{{user.lastActive | timeAgo}}</p>\\n            </div>\\n            <div>\\n              <strong>Member sice:</strong>\\n              <p>{{user.created | date: \\\"mediumDate\\\"}}</p>\\n            </div>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editFormId\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"tab-panel\\\">\\n          <tabset class=\\\"member-tabset\\\">\\n            <tab heading=\\\"Edit Profile\\\">\\n              <form #editForm=\\\"ngForm\\\" id=\\\"editFormId\\\" (ngSubmit)=\\\"updateUser()\\\">\\n                  <h4>Description</h4>\\n                  <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n                  <h4>Looking For</h4>\\n                  <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n                  <h4>Interests</h4>\\n                  <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"user.interests\\\"></textarea>\\n                  <h4>Location Details</h4>\\n                  <div class=\\\"form-inline\\\">\\n                    <label for=\\\"city\\\">City</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                    <label for=\\\"country\\\">Country</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n                  </div>\\n              </form>              \\n            </tab>\\n            <tab heading=\\\"Edit Photo\\\">\\n              <app-photo-editor [photos]=\\\"user.photos\\\" (getPhotoChangeUrl)=\\\"updatePhotoUrl($event)\\\"></app-photo-editor>\\n            </tab>\\n          </tabset>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from '../model/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../services/userservice/user.service';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if(this.editForm.dirty){\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private route: ActivatedRoute, private alertify: AlerifyService,\n              private userSvc: UserService, private authSvc: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe( data => {\n      this.user = data['user'];\n      this.authSvc.currentPhotoUrl.subscribe( photoUrl => this.photoUrl = photoUrl);\n    });\n  }\n\n  updateUser() {\n    this.userSvc.updateUser(this.authSvc.decodedToken.nameid, this.user).subscribe( next => {\n      this.alertify.success('User profile updated successfully.');\n      this.editForm.reset(this.user);\n    });\n  }\n\n  updatePhotoUrl(photoUrl: string){\n    this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\\n</div>\\n<div class=\\\"container mt-3\\\">\\n  <form class=\\\"form-inline\\\" novalidate #ageFilterForm=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"minAge\\\">Age From</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" [(ngModel)]=\\\"userParams.minAge\\\" id=\\\"minAge\\\"\\n        name=\\\"minAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"maxAge\\\">Age To</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" [(ngModel)]=\\\"userParams.maxAge\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\"\\n        name=\\\"maxAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"gender\\\">Show: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\" [(ngModel)]=\\\"userParams.gender\\\" name=\\\"gender\\\">\\n        <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n          {{gender.display}}\\n        </option>\\n      </select>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\">\\n      Reset Filter</button>\\n    <div class=\\\"col\\\">\\n      <div class=\\\"btn-group float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" name=\\\"orderBy\\\" [(ngModel)]=\\\"userParams.orderBy\\\" \\n        (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" name=\\\"orderBy\\\" [(ngModel)]=\\\"userParams.orderBy\\\"        \\n        (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n      </div>\\n    </div>\\n  </form>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\"\\n    nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/userservice/user.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\nimport { User } from '../model/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult } from '../model/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  user: User;\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  userParams: any = {};\n\n  constructor(private userSvc: UserService, private alertifySvc: AlerifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe( data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n      this.user = JSON.parse(localStorage.getItem('user'));\n      this.userParams.gender = this.user.gender === 'male' ? 'female' : 'male';\n      this.userParams.minAge = 18;\n      this.userParams.maxAge = 99;\n      this.userParams.orderBy = 'lastActive';\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers(){\n    console.log(this.userParams.orderBy);\n    this.userSvc.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe( (response: PaginationResult<User[]>) => {\n        this.users = response.result;\n        this.pagination = response.pagination;\n      }, error => {\n        this.alertifySvc.error(error);\n      });\n  }\n  resetFilters(){\n      this.userParams.gender = this.user.gender === 'male' ? 'female' : 'male';\n      this.userParams.minAge = 18;\n      this.userParams.maxAge = 99;\n      this.userParams.orderBy = 'lastActive';\n      this.loadUsers();\n  }\n}\n","module.exports = \".card{\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.chat{\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.chat li{\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-bottom: 1px dotted grey\\r\\n}\\r\\n\\r\\n.rounded-circle{\\r\\n    height: 50px;\\r\\n    widows: 50px;\\r\\n}\\r\\n\\r\\n.card-body{\\r\\n    overflow-y: scroll;\\r\\n    height: 400px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      <p>No messages yet. Say hi by using the message box below.</p>\\n    </div>\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId == recipientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\n          <span class=\\\"chat-img float-right\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <small class=\\\"text-muted\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(Unread)</span>\\n                <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\n              </small>\\n              <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <form #sendMessageForm='ngForm' (ngSubmit)='sendMessageForm.valid && sendMessage()'>\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" \\n        class=\\\"form-control input-sm\\\"\\n        name='content'\\n        required\\n        [(ngModel)]=\\\"newMessage.content\\\"\\n        placeholder=\\\"send a private message.\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-primary\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Messages } from '../model/messages';\nimport { UserService } from '../services/userservice/user.service';\nimport { AuthService } from '../services/auth.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Messages[];\n  newMessage: any = {};\n  constructor(private userSvc: UserService, private authSvc: AuthService, private alertifySvc: AlerifyService) { }\n  ngOnInit() {\n    this.getMessageThread();\n  }\n\n  getMessageThread() {\n    const currrentUserId = +this.authSvc.decodedToken.nameid;\n    this.userSvc.getMessageThread(this.authSvc.decodedToken.nameid, this.recipientId)\n      .pipe( tap( messages => {\n        for (let i = 0; i < messages.length; i++) {\n          if (messages[i].isRead === false && messages[i].recipientId === currrentUserId) {\n            this.userSvc.markMessageAsRead(messages[i].id, currrentUserId);\n          }\n        }\n      }))\n      .subscribe( messages => {\n        this.messages = messages;\n      });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userSvc.sendMessage(this.authSvc.decodedToken.nameid, this.newMessage)\n      .subscribe((message: Messages) => {\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n      });\n  }\n}\n","module.exports = \"table{\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.img-circle{\\r\\n    max-height: 50px;\\r\\n}\\r\\n\\r\\ntd{\\r\\n    vertical-align: middle;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Send / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\"\\n          [queryParams] = \\\"{tab: 3}\\\" >\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer!='Outbox'\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" class=\\\"img-circle rounded-circle mr-1\\\">\\n            <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer=='Outbox'\\\">\\n            <img src=\\\"{{message.recipientPhotoUrl}}\\\" class=\\\"img-circle rounded-circle mr-1\\\">\\n            <strong>{{message.recipientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.messageSent | timeAgo}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)='$event.stopPropagation()' (click)='deleteMessage(message.id)'>Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Messages } from '../model/messages';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { Pagination, PaginationResult } from '../model/pagination';\nimport { UserService } from '../services/userservice/user.service';\nimport { AuthService } from '../services/auth.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Messages[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n  constructor(\n    private userSvc: UserService,\n    private authSvc: AuthService,\n    private alertifySvc: AlerifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n      console.log(this.messageContainer);\n    });\n  }\n  loadMessages() {\n    console.log(this.messageContainer);\n    this.userSvc\n      .getUserMessages(\n        this.authSvc.decodedToken.nameid,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.messageContainer\n      )\n      .subscribe((resp: PaginationResult<Messages[]>) => {\n        if (resp != null) {\n          this.messages = resp.result;\n          this.pagination = resp.pagination;\n        }\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n  deleteMessage(id: number) {\n    this.alertifySvc.confirm('Are you really want to delete this message?', () => {\n      this.userSvc.deleteMessage(id, this.authSvc.decodedToken.nameid).subscribe( () => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertifySvc.success('The message is successfully deleted.');\n      }, error => {\n        this.alertifySvc.error('Failed to delete the message.')\n      });\n    });\n  }\n}\n","export interface Pagination {\n    currentPage: number; \n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginationResult<T> {\n    result: T;\n    pagination: Pagination;\n}","module.exports = \".dropdown-toggle,.dropdown-item{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nimg{\\r\\n    max-height: 50px;\\r\\n    border: 2px solid white;\\r\\n    display: inline;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Dating App</a>\\r\\n      <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">List</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\r\\n        <span class=\\\"mr-1\\\"><img src=\\\"{{photoUrl || '../../../../assets/user.png'}}\\\" alt=\\\"\\\"></span>\\r\\n        <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\r\\n          Welcome {{authService.decodedToken?.unique_name | titlecase}}\\r\\n        </a>  \\r\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\"><i class=\\\"fa fa-user\\\"></i>Edit Profile</a>\\r\\n          <div class=\\\"dropdown-divider\\\"></div>\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i>Logout</a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" \\r\\n              placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n        <input class=\\\"form-control mr-sm-2\\\" required type=\\\"password\\\" name=\\\"password\\\" \\r\\n              placeholder=\\\"Password\\\" [(ngModel)]=\\\"model.password\\\">\\r\\n        <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\r\\n      </form>\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport { AlerifyService } from \"../services/alertifyservice/alerify.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-navbar\",\r\n  templateUrl: \"./navbar.component.html\",\r\n  styleUrls: [\"./navbar.component.css\"]\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  model: any = {};\r\n  photoUrl: string;\r\n  constructor(public authService: AuthService, private alertifySvc: AlerifyService, \r\n    private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.currentPhotoUrl.subscribe( photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(\r\n      next => {\r\n        this.alertifySvc.success('Logged in successfully!');\r\n      },\r\n      error => {\r\n        this.alertifySvc.error(error);\r\n      },\r\n      ()=>{\r\n        this.router.navigate(['\\members']);\r\n      }\r\n    );\r\n  }\r\n\r\n  loggedIn(){\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    this.authService.decodedToken = null;\r\n    this.authService.currentUser = null;\r\n    this.alertifySvc.message('Logged out successfully!');\r\n    this.router.navigate(['\\home']);\r\n  }\r\n}\r\n","module.exports = \"img.img-thumbnail{\\r\\n    height: 100px;\\r\\n    min-width: 100px;\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over{\\r\\n    border: dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n    color: transparent\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"\\\" class=\\\"img-thumbnail p-1\\\">\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" (click)=\\\"setMainPhoto(photo)\\\"\\n            [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\n            [disabled]=\\\"photo.isMain\\\">Main</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\"\\n            (click)=\\\"deletePhoto(photo.id)\\\" [disabled]=\\\"photo.isMain\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n\\n    <div class=\\\"col-md-3\\\">\\n\\n        <h3>Add Photos</h3>\\n\\n        <div ng2FileDrop\\n             [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n             (fileOver)=\\\"fileOverBase($event)\\\"\\n             [uploader]=\\\"uploader\\\"\\n             class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n             <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n            Drop Photos Here\\n        </div>\\n        Multiple\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n        Single\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    </div>\\n\\n    <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n        <h3>Upload queue</h3>\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n        <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n                <th width=\\\"50%\\\">Name</th>\\n                <th>Size</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                <td><strong>{{ item?.file?.name }}</strong></td>\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n\\n        <div>\\n            <div>\\n                Queue progress:\\n                <div class=\\\"progress mb-4\\\">\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n                </div>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                    (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                <span class=\\\"fa fa-upload\\\"></span> Upload\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                    (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n                <span class=\\\"fa fa-ban\\\"></span> Cancel\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                    (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                <span class=\\\"fa fa-trash\\\"></span> Remove\\n            </button>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from '../model/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../services/auth.service';\nimport { UserService } from '../services/userservice/user.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getPhotoChangeUrl = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentPhoto: Photo;\n\n  constructor(private authSvc: AuthService, private userSvc: UserService,\n    private alertifySvc: AlerifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authSvc.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onSuccessItem = (item, response , status , headers) => {\n      const resp: Photo = JSON.parse(response);\n      const photo = {\n        id: resp.id,\n        url: resp.url,\n        dateAdded: resp.dateAdded,\n        description: resp.description,\n        isMain: resp.isMain\n      };\n      this.photos.push(photo);\n      if (resp.isMain) {\n        this.authSvc.updateCurrentPhotoUrl(photo.url);\n        this.authSvc.currentUser.photoUrl = photo.url;\n        localStorage.setItem('user', JSON.stringify(this.authSvc.currentUser));\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userSvc.setMainPhoto(this.authSvc.decodedToken.nameid, photo.id).subscribe(() => {\n      this.currentPhoto = this.photos.filter( p => p.isMain === true)[0];\n      this.currentPhoto.isMain = false;\n      photo.isMain = true;\n      this.authSvc.updateCurrentPhotoUrl(photo.url);\n      this.authSvc.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authSvc.currentUser));\n    }, error => {\n      this.alertifySvc.error(error);\n    });\n  }\n\n  deletePhoto(photoId: number) {\n    this.alertifySvc.confirm('Do you want to delete this photo from your profile?', () => {\n      this.userSvc.deletePhoto(this.authSvc.decodedToken.nameid, photoId).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n      }, error => {\n        this.alertifySvc.error('Something went wrong. Unable to delete the photo at this moment!');\n      });\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)='register()'>\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" \\n    [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors &&\\n                  registerForm.get('username').touched}\\\"               \\n    formControlName=\\\"username\\\" class=\\\"form-control\\\" \\n    placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Please enter a valid username.</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is required</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker \\n      [bsConfig]=\\\"bsConfig\\\" >\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of Birth is required</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is required</div>\\n  </div> \\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\"\\n          [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors &&\\n          registerForm.get('password').touched}\\\"\\n          formControlName=\\\"password\\\" \\n          class=\\\"form-control\\\" \\n          placeholder=\\\"Password\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n        *ngIf=\\\"registerForm.get('password').hasError('required') &&\\n                registerForm.get('password').touched\\\">\\n          Password cannot be empty.</div>\\n    <div class=\\\"invalid-feedback\\\"\\n        *ngIf=\\\"registerForm.get('password').hasError('minlength') &&\\n                registerForm.get('password').touched\\\">\\n          Password must be atleast 4 characters.</div>\\n    <div class=\\\"invalid-feedback\\\"\\n        *ngIf=\\\"registerForm.get('password').hasError('maxlength') &&\\n                registerForm.get('password').touched\\\">\\n          Password must not exceed 8 characters.</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <input type=\\\"password\\\" \\n      [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors &&\\n          registerForm.get('confirmPassword').touched || \\n          registerForm.get('confirmPassword').touched && \\n          registerForm.hasError('mismatch') }\\\"\\n      formControlName=\\\"confirmPassword\\\" \\n      class=\\\"form-control\\\" \\n      placeholder=\\\"Confirm Password\\\">\\n      <div class=\\\"invalid-feedback\\\"\\n        *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') &&\\n                registerForm.get('confirmPassword').touched\\\">\\n          Confirm Password cannot be empty.</div>\\n      <div class=\\\"invalid-feedback\\\"\\n        *ngIf=\\\"registerForm.hasError('mismatch') &&\\n                registerForm.get('confirmPassword').touched &&\\n                registerForm.get('confirmPassword').value\\\">\\n          Password must match.</div>\\n    </div>\\n\\n  <div class=\\\"form-group text-center\\\" >\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)='cancel()'>Cancel</button>\\n  </div>\\n</form>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../model/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegisterMode = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n  constructor( private authService: AuthService, private alertifySvc: AlerifyService,\n              private fb: FormBuilder, private router: Router ) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    };\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, { validator : this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(formGroup: FormGroup) {\n    return formGroup.get('password').value === formGroup.get('confirmPassword').value ? null : {'mismatch' : true};\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n\n      this.authService.register(this.user).subscribe( () => {\n        this.alertifySvc.success('Registration is successfull.');\n      }, error => {\n        this.alertifySvc.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n        }, error => {\n          this.alertifySvc.error(error);\n        });\n      });\n    }\n    console.log(this.registerForm.value);\n  }\n\n  cancel() {\n    this.cancelRegisterMode.emit(false);\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { User } from \"../model/user\";\r\nimport { UserService } from \"../services/userservice/user.service\";\r\nimport { AlerifyService } from \"../services/alertifyservice/alerify.service\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParam= 'Likers';\r\n    constructor(private userSvc: UserService, private alertifySvc: AlerifyService,\r\n                private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userSvc.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n            catchError( error => {\r\n                this.alertifySvc.error('Problems in retrieving data!');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        )\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { User } from \"../model/user\";\r\nimport { UserService } from \"../services/userservice/user.service\";\r\nimport { AlerifyService } from \"../services/alertifyservice/alerify.service\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n    constructor(private userSvc: UserService, private alertifySvc: AlerifyService,\r\n                private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>{\r\n        return this.userSvc.getUser(route.params['id']).pipe(\r\n            catchError( error => {\r\n                this.alertifySvc.error('Problems in retrieving data!');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        )\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { User } from \"../model/user\";\r\nimport { UserService } from \"../services/userservice/user.service\";\r\nimport { AlerifyService } from \"../services/alertifyservice/alerify.service\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n    constructor(private userSvc: UserService, private authSvc: AuthService,\r\n        private alertifySvc: AlerifyService, private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>{\r\n        return this.userSvc.getUser(this.authSvc.decodedToken.nameid).pipe(\r\n            catchError( error => {\r\n                this.alertifySvc.error('Problems in retrieving your data!');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        )\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { User } from \"../model/user\";\r\nimport { UserService } from \"../services/userservice/user.service\";\r\nimport { AlerifyService } from \"../services/alertifyservice/alerify.service\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    constructor(private userSvc: UserService, private alertifySvc: AlerifyService,\r\n                private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]>{        \r\n        return this.userSvc.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError( error => {\r\n                this.alertifySvc.error('Problems in retrieving data!');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        )\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../model/user';\r\nimport { UserService } from '../services/userservice/user.service';\r\nimport { AlerifyService } from '../services/alertifyservice/alerify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Messages } from '../model/messages';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Messages[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n    constructor(private userSvc: UserService, private alertifySvc: AlerifyService,\r\n                private authService: AuthService, private router: Router) {}\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Messages[]> {\r\n        return this.userSvc.getUserMessages(this.authService.decodedToken.nameid, this.pageNumber,\r\n            this.pageSize, this.messageContainer).pipe(\r\n            catchError( () => {\r\n                this.alertifySvc.error('Problems in retrieving messages!');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        )\r\n    }\r\n}","import { Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { MemberDetailComponent } from './member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './resolver/member-detail.resolver';\r\nimport { MemberListResolver } from './resolver/member-list.resolver';\r\nimport { MemberEditComponent } from './member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './resolver/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './guard/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './resolver/lists.resolver';\r\nimport { MessagesResolver } from './resolver/messages.resolver';\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver}},\r\n            { path: 'members/:id', component: MemberDetailComponent, resolve: {user : MemberDetailResolver} },\r\n            { path: 'member/edit', component: MemberEditComponent, resolve: {user: MemberEditResolver}, \r\n                    canDeactivate: [PreventUnsavedChanges]},\r\n            { path: 'messages', component: MessagesComponent, resolve: { messages: MessagesResolver}},\r\n            { path: 'lists', component: ListsComponent, resolve: { users: ListsResolver }}\r\n        ]\r\n    },\r\n    { path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n","import { Injectable } from \"@angular/core\";\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AlerifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(event) {\n      if (event) {\n        okCallback();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from \"src/environments/environment\";\nimport { User } from \"../model/user\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  uri: string;\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl= new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private _http: HttpClient) {}\n\n  updateCurrentPhotoUrl(photoUrl: string){\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(user: User) {\n    this.uri = 'login';\n    return this._http.post(this.baseUrl + this.uri, user).pipe(\n      map((response: any) => {\n        if (response) {\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('user', JSON.stringify(response.currentUser));\n          this.decodedToken = this.jwtHelper.decodeToken(response.token);\n          this.currentUser = response.currentUser;\n          this.updateCurrentPhotoUrl(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  register(user: User) {\n    this.uri = 'register';\n    return this._http.post(this.baseUrl + this.uri, user);\n  }\n\n  loggedIn(){\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport {\n  HttpClient,\n  HttpHandler,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport { User } from \"src/app/model/user\";\nimport { Observable } from \"rxjs\";\nimport { PaginationResult } from \"src/app/model/pagination\";\nimport { map } from \"rxjs/operators\";\nimport { Messages } from \"src/app/model/messages\";\n\n// const httpOptions = {\n//   headers : new HttpHeaders({\n//     'Authorization': 'Bearer ' + localStorage.getItem('token')\n//   })\n// };\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n  constructor(private _http: HttpClient) {}\n\n  getUsers(\n    pageNumber?,\n    pageSize?,\n    userParams?,\n    likeParam?: string\n  ): Observable<PaginationResult<User[]>> {\n    const paginationResult: PaginationResult<User[]> = new PaginationResult<\n      User[]\n    >();\n    let params = new HttpParams();\n    if (pageNumber != null && pageSize != null) {\n      params = params.append(\"pageNumber\", pageNumber);\n      params = params.append(\"pageSize\", pageSize);\n    }\n    if (userParams != null) {\n      params = params.append(\"gender\", userParams.gender);\n      params = params.append(\"minAge\", userParams.minAge);\n      params = params.append(\"maxAge\", userParams.maxAge);\n      params = params.append(\"orderBy\", userParams.orderBy);\n    }\n    if (likeParam && likeParam.toLowerCase() === \"likers\") {\n      params = params.append(\"likers\", \"true\");\n    }\n    if (likeParam && likeParam.toLowerCase() === \"likees\") {\n      params = params.append(\"likees\", \"true\");\n    }\n    return this._http\n      .get<User[]>(this.baseUrl + \"users\", { observe: \"response\", params })\n      .pipe(\n        map(response => {\n          paginationResult.result = response.body;\n          if (response.headers.get(\"Pagination\") != null) {\n            paginationResult.pagination = JSON.parse(\n              response.headers.get(\"Pagination\")\n            );\n          }\n          return paginationResult;\n        })\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    return this._http.get<User>(this.baseUrl + \"users/\" + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this._http.put(this.baseUrl + \"users/\" + id, user);\n  }\n\n  setMainPhoto(userId: number, photoId: number) {\n    return this._http.post(\n      this.baseUrl + \"users/\" + userId + \"/photos/\" + photoId + \"/setMain\",\n      {}\n    );\n  }\n\n  deletePhoto(userId: number, photoId: number) {\n    return this._http.delete(\n      this.baseUrl + \"users/\" + userId + \"/photos/\" + photoId\n    );\n  }\n\n  likeUser(id: number, recipientId: number) {\n    return this._http.post(\n      this.baseUrl + \"users/\" + id + \"/like/\" + recipientId,\n      {}\n    );\n  }\n\n  getUserMessages(\n    id: number,\n    pageNumber?,\n    pageSize?,\n    messageContainer?\n  ): Observable<PaginationResult<Messages[]>> {\n    const paginationResult: PaginationResult<Messages[]> = new PaginationResult<\n      Messages[]\n    >();\n    let params = new HttpParams();\n\n    params = params.append(\"messageContainer\", messageContainer);\n    if (pageNumber != null && pageSize != null) {\n      params = params.append(\"pageNumber\", pageNumber);\n      params = params.append(\"pageSize\", pageSize);\n    }\n\n    return this._http\n      .get<Messages[]>(this.baseUrl + \"users/\" + id + \"/messages/\", {\n        observe: \"response\",\n        params\n      })\n      .pipe(\n        map(response => {\n          if (response != null) {\n            paginationResult.result = response.body;\n            if (response.headers.get(\"Pagination\") != null) {\n              paginationResult.pagination = JSON.parse(\n                response.headers.get(\"Pagination\")\n              );\n            }\n            return paginationResult;\n          }\n        })\n      );\n  }\n  getMessageThread(id: number, recipientId: number){\n    return this._http.get<Messages[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message: Messages){\n    return this._http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number){\n    return this._http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markMessageAsRead(id: number, userId: number){\n    return this._http.post(this.baseUrl + 'users/' + userId + '/messages/' + id + '/read', {})\n    .subscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}